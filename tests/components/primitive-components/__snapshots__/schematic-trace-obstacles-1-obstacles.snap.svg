<svg xmlns="http://www.w3.org/2000/svg" width="640" height="640" viewBox="0 0 640 640"><g><rect width="26.794" height="120.574" x="140.813" y="259.713" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="0" data-y="0"/></g><g><rect width="0" height="13.397" x="140.813" y="382.297" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="-.2" data-y="-1.03"/></g><g><rect width="13.397" height="13.397" x="134.115" y="244.306" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="-.2" data-y="1.03"/></g><g><rect width="37.512" height="26.051" x="470.383" y="306.974" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="5" data-y="0"/></g><g><rect width="26.794" height="6.699" x="107.321" y="269.761" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="-.5" data-y=".7"/></g><g><rect width="26.794" height="6.699" x="107.321" y="283.158" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="-.5" data-y=".5"/></g><g><rect width="26.794" height="6.699" x="107.321" y="296.555" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="-.5" data-y=".3"/></g><g><rect width="26.794" height="6.699" x="107.321" y="309.952" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="-.5" data-y=".1"/></g><g><rect width="26.794" height="6.699" x="107.321" y="323.349" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="-.5" data-y="-.1"/></g><g><rect width="26.794" height="6.699" x="107.321" y="336.746" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="-.5" data-y="-.3"/></g><g><rect width="26.794" height="6.699" x="107.321" y="363.541" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="-.5" data-y="-.7"/></g><g><rect width="26.794" height="6.699" x="174.306" y="363.541" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x=".5" data-y="-.7"/></g><g><rect width="26.794" height="6.699" x="174.306" y="350.144" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x=".5" data-y="-.5"/></g><g><rect width="26.794" height="6.699" x="174.306" y="336.746" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x=".5" data-y="-.3"/></g><g><rect width="26.794" height="6.699" x="174.306" y="323.349" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x=".5" data-y="-.1"/></g><g><rect width="26.794" height="6.699" x="174.306" y="309.952" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x=".5" data-y=".1"/></g><g><rect width="26.794" height="6.699" x="174.306" y="296.555" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x=".5" data-y=".3"/></g><g><rect width="26.794" height="6.699" x="174.306" y="283.158" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x=".5" data-y=".5"/></g><g><rect width="26.794" height="6.699" x="174.306" y="269.761" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x=".5" data-y=".7"/></g><g><rect width="26.794" height="6.699" x="445.598" y="316.651" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="4.55" data-y="0"/></g><g><rect width="559.33" height=".67" x="40.335" y="176.986" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="2.475" data-y="2.13"/></g><g><rect width="559.33" height=".67" x="40.335" y="462.344" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="2.475" data-y="-2.13"/></g><g><rect width=".67" height="285.359" x="40" y="177.321" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="-1.7" data-y="0"/></g><g><rect width=".67" height="285.359" x="599.33" y="177.321" fill="none" stroke="#000" stroke-width=".015" data-type="rect" data-x="6.65" data-y="0"/></g><g id="crosshair" style="display:none"><line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width=".5"/><line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width=".5"/></g><script><![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 66.97530561878443,
        "c": 0,
        "e": 154.19289608002745,
        "b": 0,
        "d": -66.97530561878443,
        "f": 320
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]></script></svg>