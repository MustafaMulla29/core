<svg xmlns="http://www.w3.org/2000/svg" width="640" height="640" viewBox="0 0 640 640"><g><rect width="106.87" height="64.122" x="40" y="264.427" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="-10" data-y="0"/></g><g><rect width="45.038" height="12.824" x="284.657" y="326.412" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="0" data-y="-1.7"/></g><g><rect width="71.403" height="12.824" x="271.474" y="313.588" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="0" data-y="-1.1"/></g><g><rect width="82.781" height="12.824" x="265.785" y="300.763" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="0" data-y="-.5"/></g><g><rect width="85.389" height="12.824" x="264.481" y="287.939" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="0" data-y=".1"/></g><g><rect width="80.089" height="12.824" x="267.131" y="275.115" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="0" data-y=".7"/></g><g><rect width="64.971" height="12.824" x="274.69" y="262.29" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="0" data-y="1.3"/></g><g><rect width="26.696" height="12.824" x="293.827" y="249.466" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="0" data-y="1.9"/></g><g><rect width="4.275" height="12.824" x="518.779" y="390.534" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="10" data-y="-4.7"/></g><g><rect width="12.824" height="12.824" x="514.504" y="377.71" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="10" data-y="-4.1"/></g><g><rect width="21.374" height="12.824" x="510.229" y="364.885" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="10" data-y="-3.5"/></g><g><rect width="29.924" height="12.824" x="505.954" y="352.061" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="10" data-y="-2.9"/></g><g><rect width="38.473" height="12.824" x="501.679" y="339.237" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="10" data-y="-2.3"/></g><g><rect width="158.168" height="12.824" x="441.832" y="326.412" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="10" data-y="-1.7"/></g><g><rect width="132.519" height="12.824" x="454.656" y="313.588" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="10" data-y="-1.1"/></g><g><rect width="106.87" height="12.824" x="467.481" y="300.763" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="10" data-y="-.5"/></g><g><rect width="86.921" height="12.824" x="477.455" y="287.939" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="10" data-y=".1"/></g><g><rect width="95.471" height="12.824" x="473.181" y="275.115" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="10" data-y=".7"/></g><g><rect width="42.392" height="12.824" x="468.906" y="262.29" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="8.558" data-y="1.3"/></g><g><rect width="42.392" height="12.824" x="530.534" y="262.29" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="11.442" data-y="1.3"/></g><g><rect width="27.43" height="12.824" x="464.631" y="249.466" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="8.008" data-y="1.9"/></g><g><rect width="27.43" height="12.824" x="549.771" y="249.466" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="11.992" data-y="1.9"/></g><g><rect width="12.468" height="12.824" x="460.356" y="236.641" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="7.458" data-y="2.5"/></g><g><rect width="12.468" height="12.824" x="569.008" y="236.641" fill="none" stroke="#000" stroke-width=".047" data-type="rect" data-x="12.542" data-y="2.5"/></g><g id="crosshair" style="display:none"><line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width=".5"/><line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width=".5"/></g><script><![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 21.37404580152672,
        "c": 0,
        "e": 307.17557251908397,
        "b": 0,
        "d": -21.37404580152672,
        "f": 296.48854961832063
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]></script></svg>